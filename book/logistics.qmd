# Logistics {#sec-logistics}

## General information

- Lead: [Prof. Benjamin Stocker](https://geco-group.org/author/benjamin-stocker/); assistance: [Dr. Fabian Bernhard](https://geco-group.org/author/fabian-bernhard/)
- Course language is English.
- Monday 14.15-16.00 is our presence time, use it for your communication with us.
- No email communications.
- Lecture notes are available as online tutorials (see @sec-plan). They contain all contents as reproducible code.
- No recordings are made available. It’s all in the tutorials.
- The number of students is limited to 25.
- This course follows a hybrid class setup: input lectures, flipped classroom, and individual work on a (partly) self-guided project.
- You will work on your own laptops, bring them to class. If this poses a limitation to your participation, please me (B.S.) know. 
- To get you set up, we’ll support you with installing all the necessary software on our laptops. But please do get started with installations and setup before our first session, following this:

> Please install essential software needed for this course and check it is running. We will offer support in class, for those that encounter problems. Essential software is (1) **R and RStudio**, follow [this](https://geco-bern.github.io/agds_book/getting_started.html#installing-r-and-rstudio), (2) **git**, follow [this](https://geco-bern.github.io/agds_book/getting_started.html#git-1). Note that additional software for spatial analysis (NetCDF, gdal) is *not* required for AGDS I, i.e. the corresponding sections can be skipped (https://geco-bern.github.io/agds_book/getting_started.html#other-libraries-and-applications).


## Course contents and design

This course introduces the typical data science workflow using various examples of geographical and environmental data. With a strong hands-on component and a series of input lectures, this course introduces the basic concepts of data science and teaches how to conduct each step of the data science workflow. This includes the handling of various data formats, the formulation and fitting of robust statistical models, including basic machine learning algorithms, the effective visualisation and communication of results, and the implementation of reproducible workflows, founded in Open Science principles. 

The overall course goal is to teach students to tell a story with data. All tutorials use the R programming language. Students will work on their own laptops.

See [Course Plan](@sec-plan) for a detailed overview the content.

## Evaluation

- Students hand in reports of 7 Report Exercises in the form of a link, sent to Prof. B. Stocker, to three *git* repositories that contains:
  - Repositories 1: code for 7 separate, reproducible workflows (RMarkdown, see [here](https://geco-bern.github.io/agds_book/getting_started.html#sec-rmarkdown)) for 7 Report Exercises (`vignettes/re1.Rmd` to `vignettes/re7.Rmd`).
  - Repositories 2 and 3: the result of the paired exercise
- All 7 RMarkdown files and the paired exercise will be equally weighted for the final grade.
- For grading, we consider the following criteria:
  - **Reproducibility** (20%). Make sure your RMarkdown code is reproducible and generates a html document as intended. You can check this by letting a colleague clone your git repository and run your code on their machine. If it fails, it's not reproducible, and you won't get points for this aspect.
  - **Coding practice** (20%). This considers the quality of the code you have written (clean, readable, consistent, extensible, see [here](https://geco-bern.github.io/agds_book/programming_primers.html#style-your-code)) \[and the quality of the commit messages\].
  - **Quality of visualization** (20%). This considers the appearance of the generated html document, its text and figures. Provide context, create good data visualisations, and discuss your findings.
  - **Workspace organisation and code** (20%). Follow the principles for workspace organisation and coding as described in the AGDS book ([here](https://geco-bern.github.io/agds_book/getting_started.html#sec-wspmgmt) and [here](https://geco-bern.github.io/agds_book/programming_primers.html#programming-basics)).
  - **Interpretation** (20%). This considers the the scientific interpretation of your results.

- Each student will hand in their own Report Exercises. Except for the paired exercise this is not a group work. 
- Copying of entire code snippets between students is not permitted and duplicated code will be graded with zero points for the respective Report Exercise.
- Reports cannot be re-submitted after having received the grades. Make sure all is reproducible before you submit.
- **Deadline for sending us the link by email: 08.01.2024 (course in fall semester 2023).**

## Note of caution

The use of large language models (LLMs), such as ChatGPT, is not permitted for writing report text. For supporting code development, it is permitted but should be considered with great caution: We are aware that LLMs can help solving technical tasks and the right use of LLMs for solving your problem is not discouraged. However, be aware that code produced by LLMs is not tested to be functional and error-free. Therefore, you have to understand what you get and verify and correct code with a view to your problem. Note that LLMs use text from various sources on the internet. Your report text must not contain verbatim copied text from unidentified sources. This would be considered plagiarism.

